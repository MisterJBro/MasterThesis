import numpy as np
import scipy.stats
import matplotlib.pyplot as plt

def mean_confidence_interval(data, confidence=0.95):
    a = 1.0 * np.array(data)
    n = len(a)
    m, se = np.mean(a, 0), scipy.stats.sem(a)
    h = se * scipy.stats.t.ppf((1 + confidence) / 2., n-1)
    return m, m-h, m+h

if __name__ == '__main__':
    with plt.style.context('seaborn-ticks'):
        # Values over several seeds
        y0 = np.array([
            [-76.2, -47.1, -51.0, -36.1, -9.3, 16.0, 57.3, 99.7, 150.4, 207.0, 252.1, 320.7, 354.0, 400.7, 455.9, 507.7, 551.5, 605.0, 655.2, 707.1, 801.7, 797.8, 829.8, 917.1, 945.0, 1052.9, 1075.7, 1076.1, 1109.7, 1176.0, 1175.0, 1234.8, 1253.8, 1257.5, 1301.9, 1301.2, 1346.1, 1338.4, 1335.7, 1367.0, 1414.4, 1450.7, 1416.5, 1431.1, 1485.2, 1496.1, 1474.2, 1521.4, 1558.5, 1594.1, 1645.4, 1594.2, 1649.3, 1653.0, 1692.2, 1709.7, 1751.9, 1803.5, 1805.4, 1805.9, 1804.8, 1833.6, 1874.7, 1903.6, 1948.3, 1945.8, 1943.5, 1950.6, 1965.4, 1950.7, 2005.1, 2006.1, 1984.4, 2061.5, 2084.6, 2057.7, 2052.3, 
2067.6, 2086.1, 2093.1, 2121.4, 2126.1, 2085.5, 2170.9, 2142.1, 2123.0, 2078.6, 2147.9, 2190.5, 2211.8, 2222.2, 2223.4, 2263.6, 2248.8, 2221.6, 2190.3, 2250.2, 2291.5, 2302.0, 2271.5, 2255.6],
            [-65.6, -73.9, -47.3, -28.4, -0.1, 29.8, 73.2, 111.2, 157.6, 192.9, 243.1, 282.3, 339.9, 390.1, 435.4, 472.2, 533.5, 594.8, 649.5, 700.2, 787.1, 797.1, 806.5, 887.9, 942.0, 957.5, 1009.4, 1029.0, 1022.2, 1097.9, 1126.2, 1165.5, 1216.1, 1216.1, 1233.8, 1298.2, 1329.3, 1385.2, 1392.8, 1399.7, 1415.4, 1416.8, 1451.8, 1503.2, 1545.6, 1551.3, 1571.4, 1593.8, 1631.8, 1635.0, 1631.6, 1655.0, 1685.8, 1698.4, 1713.2, 1712.5, 1686.5, 1722.3, 1765.3, 1755.0, 1753.5, 1766.1, 1792.6, 1794.4, 1842.2, 1843.2, 1851.4, 1836.3, 1839.0, 1843.1, 1903.3, 1844.4, 1825.7, 1840.3, 1875.1, 1897.4, 1931.9, 
1929.3, 1980.6, 1989.4, 2011.3, 2021.2, 2054.6, 2055.9, 2037.8, 2068.3, 2052.3, 2103.4, 2039.1, 2119.3, 2085.0, 2144.0, 2154.8, 2149.8, 2153.2, 2140.8, 2151.1, 2197.8, 2196.3, 2173.2, 2080.7],
            [-74.3, -63.9, -52.9, -31.7, 2.5, 45.3, 84.0, 132.9, 174.7, 231.9, 271.2, 328.7, 358.3, 421.9, 485.8, 533.9, 621.0, 666.2, 705.5, 748.5, 847.6, 897.1, 949.0, 1027.8, 1004.9, 1067.8, 1115.5, 1142.6, 1148.5, 1210.6, 1232.0, 1270.5, 1265.5, 1290.1, 1325.9, 1381.6, 1420.4, 1427.2, 1434.8, 1423.3, 
1488.3, 1512.2, 1544.4, 1583.4, 1574.6, 1588.6, 1573.4, 1606.8, 1655.6, 1692.4, 1694.2, 1706.0, 1683.1, 1709.1, 1782.2, 1825.4, 1799.7, 1835.3, 1858.2, 1796.9, 1863.7, 1898.7, 1930.0, 1963.2, 1963.9, 1796.4, 1871.4, 1979.5, 1998.4, 1997.9, 2041.9, 2060.5, 2090.8, 2064.2, 2095.9, 2078.0, 2054.6, 2050.0, 2123.8, 2122.4, 2073.3, 2076.6, 2123.1, 2147.9, 2157.2, 2163.8, 2194.4, 2207.1, 2208.8, 2207.4, 2204.2, 2192.9, 2179.8, 2214.2, 2202.9, 2220.6, 2227.3, 2253.7, 2258.8, 2243.1, 2261.0],
        ])

        # Statistics
        x = np.arange(y0.shape[-1])
        mean0 = np.mean(y0, 0)

        # Parameters
        fontsize_title = 18
        fontsize_label = 12
        #xlim = (-1, 101)
        #ylim = (-0.05, 1.05)
        #xticks = np.arange(0, 110, step=10)
        #yticks = np.arange(0, 1+0.5, step=0.5)
        grid = True
        title_pad = 10

        # Plot
        plt.figure(figsize=(8, 5), dpi=180)
        plt.title("Self-play Training", fontsize=fontsize_title,  fontweight="bold", pad=title_pad)
        plt.xlabel("Previous Versions", fontsize=fontsize_label, fontweight="bold")
        plt.ylabel("ELO", fontsize=fontsize_label, fontweight="bold")
        m, h1, h2 = mean_confidence_interval(y0)
        plt.plot(x, m, label="Î´-Uniform SP")
        plt.fill_between(x, h1, h2, alpha=0.4)
        #plt.xlim(xlim)
        #plt.ylim(ylim)
        #plt.xticks(xticks, fontweight="bold")
        #plt.yticks(yticks, fontweight="bold")
        plt.legend(loc="upper left", fontsize=12)
        plt.grid(grid)

        plt.show()
