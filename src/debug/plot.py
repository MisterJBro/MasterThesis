import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

if __name__ == '__main__':
    sns.set_theme()

    # Values over several seeds
    y0 = np.array([
        [63.42, 89.15, 83.13, 58.69, 86.42, 84.44, 57.98, 85.99, 84.78, 87.31, 87.24],
        [64.36, 61.54, 56.83, 84.51, 86.69, 86.19, 55.14, 84.9, 58.1, 86.05, 84.66],
        [61.73, 86.95, 86.89, 86.48, 85.81, 87.36, 58.9, 86.14, 83.58, 84.01, 57.78],
        [51.97, 86.16, 56.34, 57.58, 66.66, 87.39, 86.3, 88.51, 85.05, 86.11, 83.57],
    ])
    y1 = np.array([
        [61.438, 58.392, 86.010, 86.685, 83.640, 86.693, 85.409, 85.770, 86.615, 86.397, 86.232],
        [62.720, 59.934, 86.049, 87.134, 87.646, 85.946, 85.765, 80.658, 85.530, 87.614, 85.981],
        [64.292, 84.216, 84.826, 87.187, 55.526, 84.689, 87.483, 85.441, 88.017, 87.080, 86.817],
        [60.884, 61.577, 59.629, 86.299, 86.050, 85.521, 86.369, 86.053, 86.917, 84.687, 86.776],
    ])
    y2 = np.array([
        [61.429, 88.906, 85.281 ,86.314, 87.054, 86.961, 86.942, 85.782, 85.361, 87.181, 86.923],
        [60.212, 88.193, 87.178, 86.837, 85.956, 85.376, 86.015, 86.362, 86.485, 86.945, 86.731],
        [63.882, 90.054, 87.254, 87.301, 87.181, 86.839, 87.769, 85.658, 87.489, 84.494, 86.854],
        [61.000, 89.304, 86.403, 58.773, 85.415, 85.595, 87.206, 85.951, 85.573, 86.698, 86.576],
    ])
    y3 = np.array([
        [64.731, 62.413, 60.762, 86.960, 86.169, 86.059, 87.646, 85.697, 84.240, 86.923, 86.578],
        [59.831, 83.569, 63.081, 86.771, 86.100, 86.859, 85.067, 86.654, 85.746, 86.428, 86.502],
        [59.675, 88.315, 86.659, 86.395, 86.592, 86.079, 87.412, 85.068, 86.974, 85.472, 85.715],
        [63.033, 60.824, 86.317, 85.643, 87.027, 86.755, 85.431, 85.516, 87.415, 87.807, 85.800],
    ])
    y4 = np.array([
        [62.28681038439369, 89.82092268462226, 92.09242272365155, 89.03496534939266, 87.92261156779567, 86.67631156175597, 86.60206999036576, 86.91063316260748, 86.60747247381542, 86.90372339079107, 86.58817465056197],
        [65.705202272264, 61.41562375041448, 87.38129854731673, 88.2907948055655, 86.00665564019907, 87.49987670684472, 87.79592771850602, 86.52044940699683, 86.59988336139611, 86.97980924629557, 86.5947711537775],
        [63.09025162088277, 61.855215677402164, 60.701108491155985, 87.86317122186254, 88.30768405939291, 86.33155390351156, 87.02967913864897, 86.60335946560132, 86.58117190015649, 86.57533820585505, 85.6905417203642],
        [59.74367849326118, 84.9277269269631, 90.02162913579991, 88.92598765224312, 86.85419405200379, 88.22290583329648, 85.86787044927979, 86.93280997567962, 86.54908734701003, 86.57310101538965, 86.48422643303356],
    ])
    y5 = np.array([
        [90.67, 59.7, 89.55, 90.75, 90.65, 89.09, 59.35, 86.95, 86.94, 86.57, 87.49],
        [62.4, 88.79, 89.2, 90.08, 88.16, 87.95, 84.91, 86.8, 87.39, 86.85, 86.58],
        [64.5, 90.91, 88.29, 90.27, 89.3, 88.33, 87.89, 86.6, 86.58, 86.98, 86.89],
        [62.02, 62.34, 89.91, 89.48, 89.32, 88.74, 87.64, 86.59, 86.6, 86.61, 85.49],
    ])
    y6 = np.array([
        [60.28, 87.52, 90.56, 89.83, 89.36, 88.13, 86.32, 86.95, 86.59, 86.97, 86.6],
        [62.86, 86.27, 61.63, 89.29, 89.7, 89.42, 88.59, 86.59, 85.48, 86.58, 86.61],
        [61.79, 57.79, 90.87, 90.26, 88.21, 88.82, 87.22, 86.35, 85.47, 86.59, 86.59],
        [63.4, 86.87, 89.23, 62.01, 89.22, 88.78, 87.14, 86.54, 86.59, 86.6, 86.61],
    ])
    y7 = np.array([
        [62.67, 56.85, 89.32, 89.61, 88.88, 89.77, 87.9 , 86.77, 86.92, 86.84, 86.6 ],
        [63.65, 58.52, 90.43, 89.77, 90.06, 90.4 , 87.54, 86.22, 87.02, 86.97, 86.62],
        [60.66, 88.22, 91.39, 64.04, 89.04, 88.15, 87.19, 87.63, 86.98, 86.6 , 86.99],
        [66.17, 57.92, 60.08, 89.53, 61.28, 89.74, 88.68, 86.63, 86.57, 86.6 , 87.  ],
    ])
    y8 = np.array([
        [65.11, 59.93, 87.79, 88.96, 89.64, 90.84, 88.36, 88.03, 87.79, 88.15, 87.54],
        [61.42, 86.15, 62.32, 90.24, 60.52, 89.07, 90.87, 88.47, 87.84, 88.65, 86.99],
        [63.45, 68.9, 90.16, 87.69, 89.09, 91.32, 88.41, 89.09, 88.34, 87.55, 87.57],
        [59.41, 86.57, 87.37, 62.67, 88.79, 63.44, 90.22, 88.47, 87.47, 87.02, 86.8],
    ])

    # Statistics
    x = np.array([10, 20, 40, 60, 80, 100, 200, 400, 600, 800, 1000]).astype(str)
    mean0 = np.mean(y0, 0)
    sigma0 = np.std(y0, 0)/3
    mean1 = np.mean(y1, 0)
    sigma1 = np.std(y1, 0)/3
    mean2 = np.mean(y2, 0)
    sigma2 = np.std(y2, 0)/3
    mean3 = np.mean(y3, 0)
    sigma3 = np.std(y3, 0)/3
    mean4 = np.mean(y4, 0)
    sigma4 = np.std(y4, 0)/3
    mean5 = np.mean(y5, 0)
    sigma5 = np.std(y5, 0)/3
    mean6 = np.mean(y6, 0)
    sigma6 = np.std(y6, 0)/3
    mean7 = np.mean(y7, 0)
    sigma7 = np.std(y7, 0)/3
    mean8 = np.mean(y8, 0)
    sigma8 = np.std(y8, 0)/3

    # Plot
    plt.plot(x, mean0, label="MCS PUCT=0")
    plt.fill_between(x, mean0+sigma0, mean0-sigma0, alpha=0.4)
    plt.plot(x, mean1, label="MCS PUCT=4")
    plt.fill_between(x, mean1+sigma1, mean1-sigma1, alpha=0.4)
    plt.plot(x, mean2, label="MCS PUCT=10")
    plt.fill_between(x, mean2+sigma2, mean2-sigma2, alpha=0.4)
    plt.plot(x, mean3, label="MCS PUCT=20")
    plt.fill_between(x, mean3+sigma3, mean3-sigma3, alpha=0.4)
    plt.plot(x, mean4, label="MCS PUCT=40")
    plt.fill_between(x, mean4+sigma4, mean4-sigma4, alpha=0.4)
    plt.plot(x, mean5, label="MCS PUCT=60")
    plt.fill_between(x, mean5+sigma5, mean5-sigma5, alpha=0.4)
    plt.plot(x, mean6, label="MCS PUCT=80")
    plt.fill_between(x, mean6+sigma6, mean6-sigma6, alpha=0.4)
    plt.plot(x, mean7, label="MCS PUCT=100")
    plt.fill_between(x, mean7+sigma7, mean7-sigma7, alpha=0.4)
    plt.plot(x, mean8, label="MCS PUCT=10.000")
    plt.fill_between(x, mean8+sigma8, mean8-sigma8, alpha=0.4)

    plt.title('MCS Pdlm')
    plt.xlabel('Number of Iterations per Action')
    plt.ylabel('Return')
    plt.legend()
    plt.show()