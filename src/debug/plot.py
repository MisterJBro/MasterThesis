import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

if __name__ == '__main__':
    sns.set_theme()

    # Values over several seeds
    y0 = np.array([
        [66.6, 66.88, 69.51, 71.57, 68.1, 68.55],
    ])
    y1 = np.array([
        [66.46, 67.52, 63.24, 68.22, 67.99, 67.12],
    ])
    y2 = np.array([
        [66.57, 67.9, 69.5, 68.06, 67.88, 68.43],
    ])
    y3 = np.array([
        [45.529, 25.494, 39.361, 66.441, 48.360, 55],
    ])
    win_rate = np.array(
        [50.0,78.33,80.83,81.67,82.50,88.33,75.00,79.17,79.17,75.00,78.33,80.00,80.00,85.00,77.50,78.33,78.33,78.33,76.67,75.00,80.00,77.50,73.33,77.50,88.33,77.50,80.00,74.17,74.17,73.33,81.67,84.17,77.50,82.50,80.83,82.50,80.00,83.33,82.50,80.00,84.17,81.67,74.17,53.33,56.67,55.83,62.50,71.67,70.00,67.50,66.67,65.00,61.67,71.67,71.67,70.00,74.17,69.17,70.83,70.83,67.50,54.17,61.67,63.33,60.00,71.67,71.67,74.17,67.50,79.17,69.17,75.83,84.17,85.83,83.33,77.50,80.83,77.50,86.67,83.33,75.00,85.83,84.17,85.00,55.00,64.17,61.67,75.00,71.67,73.33,70.00,74.17,77.50,79.17,86.67,80.83,85.83,80.00,85.83,90.00,90.83,84.17,84.17,92.50,64.17,57.50,67.50,70.83,72.50,79.17,76.67,78.33,87.50,81.67,83.33,90.00,91.67,95.83,80.00,87.50,59.17,70.00,62.50,66.67,79.17,79.17,79.17,87.50,84.17,86.67,85.00,90.00,88.33,89.17,95.00,95.83,95.83,90.83,97.50,96.67,97.50,93.33,55.83,61.67,67.50,69.17,79.17,77.50,85.83,87.50,90.83,90.83,62.50,56.67,67.50,82.50,78.33,85.00,92.50,90.83,49.17,50.00,56.67,66.67,65.83,72.50,78.33,80.00,90.00,89.17,58.33,66.67,69.17,63.33,80.00,76.67,88.33,93.33,91.67,60.83,71.67,71.67,80.83,54.17,65.83,75.00,69.17,65.83,70.00,75.83,78.33,88.33,65.83,65.00,73.33,76.67,83.33,90.00,55.83,70.00,70.00,68.33,75.83,87.50,84.17,90.83,63.33,65.83,83.33,71.67,81.67,84.17,54.17,56.67,75.83,78.33,81.67,90.00,60.83,73.33,73.33,85.00,82.50,84.17,55.00,73.33,72.50,80.00,82.50,90.83,58.33,64.17,68.33,75.83,82.50,86.67,90.00,95.83,95.00,96.67,97.50,100.00,99.17,100.00,99.17,100.00,100.00,100.00,100.00,100.00,100.00,95.00,94.17,94.17,57.50,53.33,59.17,73.33,84.17,63.33,70.00,75.00,70.00,80.00,86.67,65.83,61.67,73.33,86.67,86.67,86.67,58.33,69.17,74.17,82.50,92.50,92.50,59.17,71.67,75.00,89.17,87.50,94.17,96.67,96.67,98.33,99.17,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00,100.00]
    )

    nn_dist = np.array([
        [0.  , 0.01, 0.01, 0.01, 0.05],
        [0.  , 0.02, 0.06, 0.1 , 0.06],
        [0.02, 0.08, 0.13, 0.17, 0.02],
        [0.01, 0.06, 0.03, 0.06, 0.01],
        [0.06, 0.01, 0.  , 0.01, 0.01],
    ])

    az_dist = np.array( [
        [0.  , 0.  , 0.  , 0.  , 0.03],
        [0.  , 0.01, 0.04, 0.05, 0.03],
        [0.01, 0.05, 0.5 , 0.09, 0.01],
        [0.01, 0.05, 0.03, 0.04, 0.  ],
        [0.04, 0.  , 0.  , 0.  , 0.  ],
    ])

    pgs_dist = np.array([
        [-2.01, -2.03, -1.34, -1.4 , -0.91],
        [-1.92, -1.07, -0.78, -0.89, -1.1 ],
        [-2.08, -1.07, -0.59, -0.82, -2.08],
        [-1.82, -0.88, -1.25, -1.13, -1.49],
        [-1.2 , -1.88, -1.51, -2.  , -2.15],
    ])

    pgs_dist2 = np.array([
        [-0.45, -0.07,  0.64,  0.63,  0.21],
        [ 0.01, -0.81, -0.35,  0.3 , -1.04],
        [ 0.26,  0.33,  0.48,  0.6 , -0.53],
        [-0.16, -0.04,  0.45,  0.23, -0.42],
        [-0.54,  0.59, -0.15,  0.26,  0.14],
    ])

    win_matrix = np.array([
        [ 1, 1,  1, 0.3, 0.5],
        [ 1, 0.7, 0.95, 0.5 , 0.7],
        [ 1, 0.35, 0.5, 0.05 , 0],
        [ 1, 0.5, 0.65, 0.3 , 0],
        [0.5, 0,  0, 0, 0 ],
    ])

    # Statistics
    x = np.array([10, 20, 40, 60, 80, 100]).astype(str)
    mean0 = np.mean(y0, 0)
    #sigma0 = np.std(y0, 0)/3
    mean1 = np.mean(y1, 0)
    #sigma1 = np.std(y1, 0)/3
    mean2 = np.mean(y2, 0)
    #sigma2 = np.std(y2, 0)/3
    mean3 = np.mean(y3, 0)
    #sigma3 = np.std(y3, 0)/3

    # Plot
    #plt.plot(x, mean0, label="PGS long horizon")
    #plt.fill_between(x, mean0+sigma0, mean0-sigma0, alpha=0.4)
    plt.subplots_adjust(left=0.3, bottom=0.3, right=0.7, top=0.7)
    plt.plot(win_rate)
    #plt.fill_between(x, mean1+sigma1, mean1-sigma1, alpha=0.4)
    #plt.plot(x, mean2, label="PGS short horizon")
    #plt.fill_between(x, mean2+sigma2, mean2-sigma2, alpha=0.4)
    #plt.plot(x, mean3, label="PGS long horizon")
    #plt.fill_between(x, mean3+sigma3, mean3-sigma3, alpha=0.4)
    plt.show()
    quit()

    # Heat map
    #sns.heatmap(pgs_dist2, linewidth=0.5, annot=True, xticklabels=['a', 'b', 'c', 'd', 'e'], yticklabels=[1,2,3,4,5])
    sns.heatmap(win_matrix, linewidth=0.5, annot=True, xticklabels=['random', 'nn', 'mcts', 'az', 'pgs'], yticklabels=['pgs', 'az', 'mcts', 'nn', 'random'], cbar=False)
    plt.show()

    # Plot
    plt.title('')
    plt.xlabel('Number of Iterations')
    plt.ylabel('Win Rate against Baseline (%)')
    plt.legend()
    plt.show()